// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TestTask.TransactionVerifier.DataAccess.Contexts;

#nullable disable

namespace TestTask.TransactionVerifier.DataAccess.Migrations
{
    [DbContext(typeof(TransactionVerifierDbContext))]
    partial class TransactionVerifierDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("TestTask.TransactionVerifier.DataAccess.Entities.CsvFile", b =>
                {
                    b.Property<string>("Hash")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime>("ProcessedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Hash");

                    b.ToTable("CsvFiles");
                });

            modelBuilder.Entity("TestTask.TransactionVerifier.DataAccess.Entities.CsvTransaction", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("CsvFileHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime>("ProcessedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("TransactionId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("CsvFileHash");

                    b.HasIndex("TransactionId");

                    b.ToTable("CsvTransactions");
                });

            modelBuilder.Entity("TestTask.TransactionVerifier.DataAccess.Entities.Transaction", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ProcessedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Transactions");

                    b.HasData(
                        new
                        {
                            Id = new Guid("5806af0f-5c58-44c7-8e49-e9527f89bef5"),
                            Amount = 100.50m,
                            Description = "Transaction 1",
                            ProcessedAt = new DateTime(2024, 10, 26, 21, 17, 11, 726, DateTimeKind.Local).AddTicks(8271)
                        },
                        new
                        {
                            Id = new Guid("ff70324b-b59c-44da-b2e8-c2af7ae14777"),
                            Amount = 200.75m,
                            Description = "Transaction 2",
                            ProcessedAt = new DateTime(2024, 10, 25, 21, 17, 11, 726, DateTimeKind.Local).AddTicks(8329)
                        },
                        new
                        {
                            Id = new Guid("90308387-efad-493e-aa33-8d456373a963"),
                            Amount = 50.25m,
                            Description = "Transaction 3",
                            ProcessedAt = new DateTime(2024, 10, 24, 21, 17, 11, 726, DateTimeKind.Local).AddTicks(8333)
                        },
                        new
                        {
                            Id = new Guid("becf17a0-53cf-479a-bb81-b1badd3f33c8"),
                            Amount = 300.00m,
                            Description = "Transaction 4",
                            ProcessedAt = new DateTime(2024, 10, 23, 21, 17, 11, 726, DateTimeKind.Local).AddTicks(8335)
                        },
                        new
                        {
                            Id = new Guid("a93f92f7-fce4-42e8-95aa-192eba2e9fb3"),
                            Amount = 450.00m,
                            Description = "Transaction 5",
                            ProcessedAt = new DateTime(2024, 10, 22, 21, 17, 11, 726, DateTimeKind.Local).AddTicks(8337)
                        },
                        new
                        {
                            Id = new Guid("0423973f-1114-4f76-82ed-408b2313ae20"),
                            Amount = 120.45m,
                            Description = "Transaction 6",
                            ProcessedAt = new DateTime(2024, 10, 21, 21, 17, 11, 726, DateTimeKind.Local).AddTicks(8347)
                        },
                        new
                        {
                            Id = new Guid("df7b794e-8e46-4c9e-884f-53c25dc99620"),
                            Amount = 320.85m,
                            Description = "Transaction 7",
                            ProcessedAt = new DateTime(2024, 10, 20, 21, 17, 11, 726, DateTimeKind.Local).AddTicks(8350)
                        },
                        new
                        {
                            Id = new Guid("70f9e02b-cf9c-41e1-9967-cbb318983f59"),
                            Amount = 150.95m,
                            Description = "Transaction 8",
                            ProcessedAt = new DateTime(2024, 10, 19, 21, 17, 11, 726, DateTimeKind.Local).AddTicks(8352)
                        },
                        new
                        {
                            Id = new Guid("60d0b373-3ee1-417c-9cc1-2275462139cb"),
                            Amount = 510.65m,
                            Description = "Transaction 9",
                            ProcessedAt = new DateTime(2024, 10, 18, 21, 17, 11, 726, DateTimeKind.Local).AddTicks(8353)
                        },
                        new
                        {
                            Id = new Guid("7479a297-1f1e-4a20-8f48-0afb8db63c8b"),
                            Amount = 60.75m,
                            Description = "Transaction 10",
                            ProcessedAt = new DateTime(2024, 10, 17, 21, 17, 11, 726, DateTimeKind.Local).AddTicks(8355)
                        },
                        new
                        {
                            Id = new Guid("033ca3aa-4e64-4d4e-b3fc-da4784600c5c"),
                            Amount = 80.00m,
                            Description = "Transaction 11",
                            ProcessedAt = new DateTime(2024, 10, 16, 21, 17, 11, 726, DateTimeKind.Local).AddTicks(8357)
                        },
                        new
                        {
                            Id = new Guid("0e701516-0b85-432a-97ec-baa585d29066"),
                            Amount = 90.50m,
                            Description = "Transaction 12",
                            ProcessedAt = new DateTime(2024, 10, 15, 21, 17, 11, 726, DateTimeKind.Local).AddTicks(8359)
                        },
                        new
                        {
                            Id = new Guid("bc872857-c1a2-4341-a700-0771a05eed6b"),
                            Amount = 225.35m,
                            Description = "Transaction 13",
                            ProcessedAt = new DateTime(2024, 10, 14, 21, 17, 11, 726, DateTimeKind.Local).AddTicks(8360)
                        },
                        new
                        {
                            Id = new Guid("235f54e3-8866-43b8-9aff-066affb04d66"),
                            Amount = 180.60m,
                            Description = "Transaction 14",
                            ProcessedAt = new DateTime(2024, 10, 13, 21, 17, 11, 726, DateTimeKind.Local).AddTicks(8364)
                        },
                        new
                        {
                            Id = new Guid("43bcd9af-b72a-43c1-af9c-92ae1c10324e"),
                            Amount = 275.80m,
                            Description = "Transaction 15",
                            ProcessedAt = new DateTime(2024, 10, 12, 21, 17, 11, 726, DateTimeKind.Local).AddTicks(8367)
                        },
                        new
                        {
                            Id = new Guid("76991db6-df92-4b7b-aad5-7211062436cc"),
                            Amount = 310.25m,
                            Description = "Transaction 16",
                            ProcessedAt = new DateTime(2024, 10, 11, 21, 17, 11, 726, DateTimeKind.Local).AddTicks(8369)
                        },
                        new
                        {
                            Id = new Guid("57a68c5c-ca56-4bdf-b0c9-e90219476a78"),
                            Amount = 480.75m,
                            Description = "Transaction 17",
                            ProcessedAt = new DateTime(2024, 10, 10, 21, 17, 11, 726, DateTimeKind.Local).AddTicks(8371)
                        },
                        new
                        {
                            Id = new Guid("60e6c624-d15f-4d96-8548-0cccffd60ad2"),
                            Amount = 620.85m,
                            Description = "Transaction 18",
                            ProcessedAt = new DateTime(2024, 10, 9, 21, 17, 11, 726, DateTimeKind.Local).AddTicks(8372)
                        },
                        new
                        {
                            Id = new Guid("02671829-c8cb-4546-b583-69d189a81f6c"),
                            Amount = 750.45m,
                            Description = "Transaction 19",
                            ProcessedAt = new DateTime(2024, 10, 8, 21, 17, 11, 726, DateTimeKind.Local).AddTicks(8374)
                        },
                        new
                        {
                            Id = new Guid("902dbdf1-05e4-4c6f-9e13-9700d4e877fd"),
                            Amount = 130.00m,
                            Description = "Transaction 20",
                            ProcessedAt = new DateTime(2024, 10, 7, 21, 17, 11, 726, DateTimeKind.Local).AddTicks(8376)
                        });
                });

            modelBuilder.Entity("TestTask.TransactionVerifier.DataAccess.Entities.CsvTransaction", b =>
                {
                    b.HasOne("TestTask.TransactionVerifier.DataAccess.Entities.CsvFile", "CsvFile")
                        .WithMany("CsvTransactions")
                        .HasForeignKey("CsvFileHash")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TestTask.TransactionVerifier.DataAccess.Entities.Transaction", "Transaction")
                        .WithMany("CsvTransactions")
                        .HasForeignKey("TransactionId");

                    b.Navigation("CsvFile");

                    b.Navigation("Transaction");
                });

            modelBuilder.Entity("TestTask.TransactionVerifier.DataAccess.Entities.CsvFile", b =>
                {
                    b.Navigation("CsvTransactions");
                });

            modelBuilder.Entity("TestTask.TransactionVerifier.DataAccess.Entities.Transaction", b =>
                {
                    b.Navigation("CsvTransactions");
                });
#pragma warning restore 612, 618
        }
    }
}
